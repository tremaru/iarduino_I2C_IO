// УПРАВЛЕНИЕ ВЫВОДАМИ МОДУЛЯ СТАНДАРТНЫМИ ФУНКЦИЯМИ:       // Если номер вывода указан типом uint8_t, то функции управляют выводами платы Arduino.
// pinMode(), digitalWrite(), digitalRead()                 // Если номер вывода указан типом pinNum , то функции управляют выводами модуля.
                                                            //
// Расширитель GPIO на 8 Входов/Выходов (Trema-модуль):     // https://iarduino.ru/shop/Expansion-payments/rasshiritel-na-8-vhodov-vyhodov-trema-modul.html
// Информация о подключении модулей к шине I2C:             // https://wiki.iarduino.ru/page/i2c_connection/
// Информация о модуле и описание библиотеки:               // https://wiki.iarduino.ru/page/rasshiritel-na-8-vhodov-vyhodov-trema-modul/
                                                            //
#include <Wire.h>                                           // Подключаем библиотеку для работы с аппаратной шиной I2C, до подключения библиотеки iarduino_I2C_IO_Global.
#include <iarduino_I2C_IO_Global.h>                         // Подключаем библиотеку, разрешая использовать обычные функции для управления выводами модуля.
                                                            // При этом, адрес 1 модуля должен быть 0x20, следующего 0x21 и т.д.
                                                            // Тогда выводы 0-7 принадлежат 1 модулю, 8-15 второму и т.д.
                                                            // Номера выводов Arduino указываются типом uint8_t, а модулей типом pinNum.
void setup(){                                               //
     iarduino_I2C_IO_Global.begin(&Wire); // &Wire1 ...     // Инициируем работу с расширителем выводов, указав ссылку на объект для работы с шиной I2C на которой находится расширитель (по умолчанию &Wire).
//   Конфигурируем выводы платы Arduino:                    //
     for(uint8_t i=2; i<14; i++){                           // Проходим по всем выводам платы Arduino.
         pinMode(i, OUTPUT); digitalWrite(i, LOW);          // Конфигурируем вывод i в режим выхода и устанавливаем на нем низкий логический уровень.
     }                                                      //
//   Конфигурируем выводы двух модулей расширителей выводов://
     for(pinNum i=0; i<16; i++){                            // Проходим по всем выводам двух модулей (модулей с адресами 0x20 и 0x21).
         pinMode(i, OUTPUT); digitalWrite(i, LOW);          // Конфигурируем вывод i в режим выхода и устанавливаем на нем низкий логический уровень.
     }                                                      //
}                                                           //
                                                            //
void loop(){                                                //
//   Управляем выводами на плате Arduino:                   //
     for(uint8_t i=2; i<14; i++){                           // Проходим по всем выводам платы Arduino.
         digitalWrite(i, HIGH); delay(500);                 // Устанавливаем на i выводе высокий логический уровень и ждём пол секунды.
         digitalWrite(i, LOW );                             // Устанавливаем на i выводе низкий  логический уровень.
     }                                                      //
//   Управляем выводами на модулях расширителей выводов:    //
     for(pinNum i=0; i<16; i++){                            // Проходим по всем выводам двух модулей (модулей с адресами 0x20 и 0x21).
         digitalWrite(i, HIGH); delay(500);                 // Устанавливаем на i выводе высокий логический уровень и ждём пол секунды.
         digitalWrite(i, LOW );                             // Устанавливаем на i выводе низкий  логический уровень.
     }                                                      //
}                                                           //